openapi: 3.0.0
paths:
  /ping:
    get:
      operationId: ping
      parameters: []
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: ''
      summary: ''
      tags:
        - Health
  /dummies:
    get:
      operationId: getDummies
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            default: 10
            minimum: 1
            maximum: 200
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Health
  /dummies/private:
    get:
      operationId: getPrivateDummies
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            default: 10
            minimum: 1
            maximum: 200
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Health
  /whoami:
    get:
      description: Tell who you are
      operationId: whoami
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Security
  /signin:
    post:
      operationId: signin
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Security
  /signup:
    post:
      operationId: signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Security
  /roles:
    get:
      operationId: getRoles
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            default: 10
            minimum: 1
            maximum: 200
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /roles/{id}:
    get:
      operationId: getRoleById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /users:
    get:
      operationId: getUsers
      parameters:
        - name: lastName
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            default: 10
            minimum: 1
            maximum: 200
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /users/{id}:
    get:
      operationId: getUserById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
info:
  title: Pfds Api
  description: Pfds
  version: 0.0.1
  contact: {}
tags:
  - name: Health
    description: ''
  - name: Security
    description: ''
  - name: Users
    description: ''
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Dummy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    ApiResponseError:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
        - error
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
      required:
        - id
        - name
        - createdAt
        - updatedAt
    Whoami:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nic:
          type: string
        photo:
          type: string
        birthDate:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        apv:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        role:
          $ref: '#/components/schemas/Role'
        token:
          type: string
      required:
        - id
        - email
        - username
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - createdAt
        - updatedAt
        - role
        - token
    SigninPayload:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
      required:
        - password
        - username
    SignupPayload:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nic:
          type: string
        photo:
          type: string
        birthDate:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        apv:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        roleId:
          type: string
          format: uuid
        password:
          type: string
      required:
        - id
        - email
        - username
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - createdAt
        - updatedAt
        - roleId
        - password
    RestUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nic:
          type: string
        photo:
          type: string
        birthDate:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        apv:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        role:
          $ref: '#/components/schemas/Role'
      required:
        - id
        - email
        - username
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - createdAt
        - updatedAt
        - role
