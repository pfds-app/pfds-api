openapi: 3.0.0
paths:
  /ping:
    get:
      operationId: ping
      parameters: []
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: ''
      summary: ''
      tags:
        - Health
  /dummies:
    get:
      operationId: getDummies
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Health
  /dummies/private:
    get:
      operationId: getPrivateDummies
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Health
  /whoami:
    get:
      description: Tell who you are
      operationId: whoami
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Security
  /signin:
    post:
      operationId: signin
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Security
  /signup:
    post:
      operationId: signup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupPayload'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Security
  /roles:
    get:
      operationId: getRoles
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
    put:
      operationId: crupdateRoles
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /roles/{id}:
    get:
      operationId: getRoleById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
    delete:
      operationId: deleteRoleById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /users:
    get:
      operationId: getUsers
      parameters:
        - name: lastName
          required: false
          in: query
          schema:
            type: string
        - name: firstName
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /users/{id}:
    get:
      operationId: getUserById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Users
  /users/{id}/picture/raw:
    put:
      operationId: updateProfilePicture
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Upload a user profile picture
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadeSuccessResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      summary: ''
      tags:
        - Users
  /sacraments:
    get:
      operationId: getSacraments
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sacrament'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateSacraments
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Sacrament'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sacrament'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /sacraments/{id}:
    get:
      operationId: getSacramentById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sacrament'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    delete:
      operationId: deleteSacramentById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sacrament'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /regions:
    get:
      operationId: getRegions
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateRegions
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Region'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /regions/{id}:
    get:
      operationId: getRegionById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    delete:
      operationId: deleteRegionById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /committees:
    get:
      operationId: getCommittees
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Committee'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateCommittees
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Committee'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Committee'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /committees/{id}:
    get:
      operationId: getCommitteeById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Committee'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    delete:
      operationId: deleteCommitteeById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Committee'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /associations:
    get:
      operationId: getAssociations
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Association'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateAssociations
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Association'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Association'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /associations/{id}:
    get:
      operationId: getAssociationById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    delete:
      operationId: deleteAssociationById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /responsabilities:
    get:
      operationId: getResponsabilities
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Responsability'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateResponsabilities
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Responsability'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Responsability'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /responsabilities/{id}:
    get:
      operationId: getResponsabilityById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responsability'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    delete:
      operationId: deleteResponsabilityById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responsability'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /events:
    get:
      operationId: getEvents
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    put:
      operationId: crupdateEvents
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /events/{id}:
    get:
      operationId: getEventById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
    delete:
      operationId: deleteEventById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Resources
  /ledgers:
    get:
      operationId: getLedgers
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ledger'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    put:
      operationId: crupdateLedgers
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Ledger'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ledger'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /ledgers/{id}:
    get:
      operationId: getLedgerById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ledger'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    delete:
      operationId: deleteLedgerById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ledger'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operations:
    get:
      operationId: getOperations
      parameters:
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    put:
      operationId: crupdateOperations
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operations/{id}:
    get:
      operationId: getOperationById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    delete:
      operationId: deleteOperationById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operations/results/all:
    get:
      operationId: getOperationResults
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationResult'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operations/{operationId}/staffs:
    get:
      operationId: getAllOperationStaffs
      parameters:
        - name: operationId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operations/{operationId}/tickets/status:
    get:
      operationId: getAllOperationTicketsStatus
      parameters:
        - name: operationId
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketStatus'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /tickets:
    get:
      operationId: getTickets
      parameters:
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    put:
      operationId: crupdateTickets
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateTicket'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /tickets/{id}:
    get:
      operationId: getTicketById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    delete:
      operationId: deleteTicketById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operation/{operationId}/staffs/{staffId}/payed-tickets:
    get:
      operationId: getPayedTickets
      parameters:
        - name: operationId
          required: true
          in: path
          schema:
            type: string
        - name: staffId
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            default: 1
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayedTicket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
    put:
      operationId: crupdatePayedTickets
      parameters:
        - name: operationId
          required: true
          in: path
          schema:
            type: string
        - name: staffId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PayedTicket'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayedTicket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
  /operation/{operationId}/tickets/{ticketNumber}:
    get:
      operationId: getOperationTicketByTicketNumber
      parameters:
        - name: operationId
          required: true
          in: path
          schema:
            type: string
        - name: ticketNumber
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayedTicket'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
      security:
        - bearer: []
      summary: ''
      tags:
        - Moneys
info:
  title: Jfds Api
  description: Jfds
  version: 0.0.1
  contact: {}
tags:
  - name: Health
    description: ''
  - name: Users
    description: ''
  - name: Security
    description: ''
  - name: Resources
    description: ''
  - name: Moneys
    description: ''
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Dummy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    ApiResponseError:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
        - error
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - createdAt
        - updatedAt
    Whoami:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nic:
          type: string
        photo:
          type: string
        birthDate:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        apv:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/Role'
        token:
          type: string
      required:
        - id
        - email
        - username
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - createdAt
        - updatedAt
        - role
        - token
    SigninPayload:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
      required:
        - password
        - username
    SignupPayload:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nic:
          type: string
        photo:
          type: string
        birthDate:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        apv:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roleId:
          type: string
          format: uuid
        password:
          type: string
      required:
        - id
        - email
        - username
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - createdAt
        - updatedAt
        - roleId
        - password
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nic:
          type: string
        photo:
          type: string
        birthDate:
          type: string
          format: date
        address:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        apv:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        role:
          $ref: '#/components/schemas/Role'
      required:
        - id
        - email
        - username
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - createdAt
        - updatedAt
        - role
    UploadeSuccessResponse:
      type: object
      properties:
        message:
          type: string
        fileName:
          type: string
      required:
        - message
        - fileName
    Sacrament:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - createdAt
        - updatedAt
    Region:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        code:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - code
        - createdAt
        - updatedAt
    Committee:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        code:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - code
        - createdAt
        - updatedAt
    Association:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        code:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - code
        - createdAt
        - updatedAt
    Responsability:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - createdAt
        - updatedAt
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        place:
          type: string
        beginDate:
          type: string
        endDate:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - place
        - beginDate
        - endDate
        - createdAt
        - updatedAt
    Ledger:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        ledgerDate:
          type: string
          format: date
        mouvementType:
          type: string
          enum:
            - IN
            - OUT
        price:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - ledgerDate
        - mouvementType
        - price
        - createdAt
        - updatedAt
    Operation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        numberOfTickets:
          type: number
          minimum: 1
        ticketPrice:
          type: string
        description:
          type: string
        operationDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - numberOfTickets
        - ticketPrice
        - description
        - operationDate
        - createdAt
        - updatedAt
    OperationResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
        numberOfDistributed:
          type: number
        sumOfDistributed:
          type: string
      required:
        - operation
        - numberOfDistributed
        - sumOfDistributed
    Ticket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fromNumber:
          type: number
        toNumber:
          type: number
        operation:
          $ref: '#/components/schemas/Operation'
        staff:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - fromNumber
        - toNumber
        - operation
        - staff
        - createdAt
        - updatedAt
    TicketStatus:
      type: object
      properties:
        ticket:
          $ref: '#/components/schemas/Ticket'
        numberOfTickets:
          type: number
        numberOfPayedTickets:
          type: number
        numberOfNotPayedTickets:
          type: number
        pourcentageOfPayedTickets:
          type: number
        pourcentageOfNotPayedTickets:
          type: number
        notPayedAmount:
          type: string
        payedAmount:
          type: string
      required:
        - ticket
        - numberOfTickets
        - numberOfPayedTickets
        - numberOfNotPayedTickets
        - pourcentageOfPayedTickets
        - pourcentageOfNotPayedTickets
        - notPayedAmount
        - payedAmount
    CrupdateTicket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fromNumber:
          type: number
        toNumber:
          type: number
        operationId:
          type: string
          format: uuid
        staffId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - fromNumber
        - toNumber
        - operationId
        - staffId
        - createdAt
        - updatedAt
    PayedTicket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ticketNumber:
          type: number
          minimum: 1
        ticketId:
          type: string
          format: uuid
        isPayed:
          type: boolean
        isDistributed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - ticketNumber
        - ticketId
        - isPayed
        - isDistributed
        - createdAt
        - updatedAt
